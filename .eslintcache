[{"C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\components\\PlayRound.js":"1","C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\index.js":"2","C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\components\\DartDisc.js":"3","C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\components\\PlayerCard.js":"4","C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\components\\Header.js":"5","C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\App.js":"6"},{"size":2486,"mtime":1615855665494,"results":"7","hashOfConfig":"8"},{"size":517,"mtime":1615852038038,"results":"9","hashOfConfig":"8"},{"size":381,"mtime":1615852038032,"results":"10","hashOfConfig":"8"},{"size":488,"mtime":1615852038036,"results":"11","hashOfConfig":"8"},{"size":253,"mtime":1615852038033,"results":"12","hashOfConfig":"8"},{"size":2416,"mtime":1615855665493,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"3df6xt",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\components\\PlayRound.js",["28","29"],"import React, { Component } from \"react\";\r\n\r\nexport default class PlayRound extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      targets: [],\r\n      selectedTargetIndices: [],\r\n      shootCounter: 2,\r\n      roundScore: 0,\r\n      playerNumber: 0,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prev, act) {\r\n    if (prev.round != this.props.round) {\r\n      this.selectRandomField();\r\n      this.setState({\r\n        shootCounter: 2,\r\n        roundScore: 0,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let that = this;\r\n    window.addEventListener(\"load\", function () {\r\n      const targets = document.querySelectorAll(\".target\");\r\n      that.setState({\r\n        targets: targets,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.handleHit}>Ziel getroffen</button>\r\n        <button onClick={this.handleFail}>Ziel verfehlt</button>\r\n        <h1>{this.state.roundScore}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  selectRandomField = () => {\r\n    let found = true;\r\n\r\n    while (found) {\r\n      var randomNumber = Math.floor(Math.random() * this.state.targets.length);\r\n      if (!this.state.selectedTargetIndices.includes(randomNumber)) {\r\n        found = false;\r\n      }\r\n    }\r\n    let foundValues = this.state.selectedTargetIndices;\r\n    foundValues.push(randomNumber);\r\n\r\n    var randField = this.state.targets[randomNumber];\r\n    if (this.props.playerNumber === 0) {\r\n      randField.classList.add(\"checked\");\r\n    } else {\r\n      randField.classList.add(\"checked2\");\r\n    }\r\n\r\n    this.setState({\r\n      selectedTargetIndices: foundValues,\r\n      shotvalue: randField.attributes.shotvalue,\r\n    });\r\n  };\r\n\r\n  handleFail = () => {\r\n    var shootCounter = this.state.shootCounter;\r\n    this.setState({\r\n      shootCounter: shootCounter - 1,\r\n    });\r\n    this.isPlayerFinished(shootCounter);\r\n    //this.selectRandomField();\r\n  };\r\n\r\n  handleHit = () => {\r\n    var shootCounter = this.state.shootCounter;\r\n    var shotvalue = parseInt(this.state.shotvalue.value);\r\n    var roundScore = this.state.roundScore + shotvalue;\r\n    if (shootCounter != 0) {\r\n      this.setState({\r\n        shootCounter: shootCounter - 1,\r\n        roundScore: roundScore,\r\n      });\r\n\r\n      this.selectRandomField();\r\n    } else {\r\n      this.isPlayerFinished(shootCounter);\r\n    }\r\n  };\r\n\r\n  isPlayerFinished = (counter) => {\r\n    if (counter === 0) {\r\n      this.props.changePlayer(this.state.roundScore);\r\n    }\r\n  };\r\n}\r\n",["30","31"],"C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\index.js",[],"C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\components\\DartDisc.js",[],"C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\components\\PlayerCard.js",[],"C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\components\\Header.js",[],"C:\\Users\\AliTonc\\Web\\WebCoding\\Code\\dart-game-with-react\\src\\App.js",["32"],{"ruleId":"33","severity":1,"message":"34","line":17,"column":20,"nodeType":"35","messageId":"36","endLine":17,"endColumn":22},{"ruleId":"33","severity":1,"message":"34","line":84,"column":22,"nodeType":"35","messageId":"36","endLine":84,"endColumn":24},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":74,"column":5,"nodeType":"43","endLine":74,"endColumn":48},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]